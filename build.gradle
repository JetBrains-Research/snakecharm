buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    // This plugin allows you to build plugins for IntelliJ platform using specific
    // IntelliJ SDK and bundled plugins.
    // See https://github.com/JetBrains/gradle-intellij-plugin
    id 'org.jetbrains.intellij' version '0.4.10'

    // Kotlin
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
}

apply plugin: 'java'
apply plugin: 'kotlin'

def hasPythonPlugin = project.hasProperty('pythonPlugin')

version "${project.version}.${project.buildCounter}.${project.sincePlatform}"

intellij {
    pluginName 'snakecharm'
    version ideVersion
    type ideType
    def usePyCharm = "PC" == ideType || "PY" == ideType

    plugins = []
    if (!usePyCharm) {
        if (hasPythonPlugin) {
            plugins += [pythonPlugin]
        } else {
            throw new StopActionException("Define either PyCharm build or other ide with pythonPlugin in your gradle.properties")
        }
    }

    sandboxDirectory "${project.rootDir}/.sandbox${usePyCharm ? "_pycharm" : "" }"
    ideaDependencyCachePath  "${project.rootDir}/.idea_distrib_cache"
    updateSinceUntilBuild false
    instrumentCode Boolean.valueOf(instrumentPluginCode)
    downloadSources Boolean.valueOf(downloadIdeaSources)
    // intellijRepo "https://www.jetbrains.com/intellij-repository"
}

publishPlugin {
    channels publishChannels.split(',')
    token findProperty('intellijPublishToken') ?: 'no_token_given'
}

patchPluginXml {
    // Use change notes on github
    //changeNotes """ """
    sinceBuild "${project.sinceBuild}"
    untilBuild "${project.untilBuild}"
}

sourceCompatibility = javaVersion
targetCompatibility = sourceCompatibility
compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

repositories {
    mavenCentral()
}
                       
dependencies {
//    testImplementation 'io.cucumber:cucumber-java:4.2.6'
//    testImplementation 'io.cucumber:cucumber-junit:4.2.6'
    testImplementation 'info.cukes:cucumber-java:1.2.4'
    testImplementation 'info.cukes:cucumber-junit:1.2.4'
}

task cucumber() {
    dependsOn assemble, compileTestKotlin
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"

            classpath =  project.sourceSets.test.runtimeClasspath

            // for cucumber 4.2.6: remove old version from classpath, it is there from idea platform dependency
//            classpath =  project.sourceSets.test.runtimeClasspath.filter {
//                 it.parentFile.name != "lib" || !it.name.startsWith("cucumber-")
//            }
            args = ['--plugin', 'pretty', '--glue', 'com.jetbrains.snakecharm.cucumber', 'src/test/resources']
        }
    }
}

test {
    reports {
        // turn off html reports... windows can't handle certain cucumber test name characters.
        junitXml.enabled = true
        html.enabled = false
    }
    include '**/*Test.class'
    //exclude '**/AllCucumberFeaturesTest.class'
    classpath = project.sourceSets.test.runtimeClasspath.filter {
        it.parentFile.name != "lib" || !it.name.startsWith("cucumber-")
    }

}

wrapper {
    gradleVersion = '5.4'
    distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}