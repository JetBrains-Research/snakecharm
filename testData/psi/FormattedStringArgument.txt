SnakemakeFile: FormattedStringArgument.smk
  SmkRule
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    PsiElement(Py:IDENTIFIER)('NAME')
    PsiElement(Py:COLON)(':')
    PyStatementList
      PsiWhiteSpace('\n    ')
      SmkRuleOrCheckpointArgsSection
        PsiElement(Py:IDENTIFIER)('shell')
        PyArgumentList
          PsiElement(Py:COLON)(':')
          PsiWhiteSpace('\n           ')
          PyStringLiteralExpression: multiline{30 + 42}stringarg{25}
            PsiElement(Py:SINGLE_QUOTED_STRING)('"multiline"')
            PsiWhiteSpace('\n           ')
            PyFormattedStringElement
              PsiElement(Py:FSTRING_START)('f"')
              PyFStringFragment
                PsiElement(Py:FSTRING_FRAGMENT_START)('{')
                PyBinaryExpression
                  PyNumericLiteralExpression
                    PsiElement(Py:INTEGER_LITERAL)('30')
                  PsiWhiteSpace(' ')
                  PsiElement(Py:PLUS)('+')
                  PsiWhiteSpace(' ')
                  PyNumericLiteralExpression
                    PsiElement(Py:INTEGER_LITERAL)('42')
                PsiElement(Py:FSTRING_FRAGMENT_END)('}')
              PsiElement(Py:FSTRING_END)('"')
            PsiWhiteSpace('\n           ')
            PsiElement(Py:SINGLE_QUOTED_STRING)('"string"')
            PsiWhiteSpace('\n               ')
            PyFormattedStringElement
              PsiElement(Py:FSTRING_START)('f"')
              PsiElement(Py:FSTRING_TEXT)('arg')
              PyFStringFragment
                PsiElement(Py:FSTRING_FRAGMENT_START)('{')
                PyNumericLiteralExpression
                  PsiElement(Py:INTEGER_LITERAL)('25')
                PsiElement(Py:FSTRING_FRAGMENT_END)('}')
              PsiElement(Py:FSTRING_END)('"')
  PsiWhiteSpace('\n\n')
  PyAssignmentStatement
    PyTargetExpression: df
      PsiElement(Py:IDENTIFIER)('df')
    PsiWhiteSpace(' ')
    PsiElement(Py:EQ)('=')
    PsiWhiteSpace(' ')
    PyListLiteralExpression
      PsiElement(Py:LBRACKET)('[')
      PsiElement(Py:RBRACKET)(']')
  PsiWhiteSpace('\n\n')
  SmkWorkflowPythonBlockSection
    PsiElement(Py:WORKFLOW_ONSTART_KEYWORD)('onstart')
    PsiElement(Py:COLON)(':')
    PsiWhiteSpace('\n    ')
    PyStatementList
      PyExpressionStatement
        PyCallExpression: print
          PyReferenceExpression: print
            PsiElement(Py:IDENTIFIER)('print')
          PyArgumentList
            PsiElement(Py:LPAR)('(')
            PyStringLiteralExpression: Total files: {len(df)}
              PyFormattedStringElement
                PsiElement(Py:FSTRING_START)('f"')
                PsiElement(Py:FSTRING_TEXT)('Total files: ')
                PyFStringFragment
                  PsiElement(Py:FSTRING_FRAGMENT_START)('{')
                  PyCallExpression: len
                    PyReferenceExpression: len
                      PsiElement(Py:IDENTIFIER)('len')
                    PyArgumentList
                      PsiElement(Py:LPAR)('(')
                      PyReferenceExpression: df
                        PsiElement(Py:IDENTIFIER)('df')
                      PsiElement(Py:RPAR)(')')
                  PsiElement(Py:FSTRING_FRAGMENT_END)('}')
                PsiElement(Py:FSTRING_END)('"')
            PsiElement(Py:RPAR)(')')
  PsiWhiteSpace('\n\n')
  SmkRule
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    PsiElement(Py:IDENTIFIER)('a')
    PsiElement(Py:COLON)(':')
    PyStatementList
      PsiWhiteSpace('\n    ')
      SmkRuleOrCheckpointArgsSection
        PsiElement(Py:IDENTIFIER)('output')
        PyArgumentList
          PsiElement(Py:COLON)(':')
          PsiWhiteSpace(' ')
          PyStringLiteralExpression: out
            PsiElement(Py:SINGLE_QUOTED_STRING)('"out"')