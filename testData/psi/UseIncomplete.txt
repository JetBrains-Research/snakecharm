SnakemakeFile: UseIncomplete.smk
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiErrorElement:Expecting keyword 'rule' after keyword 'use'
      <empty list>
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiErrorElement:Expecting '*', rule name, or rule listing (comma separated) after 'use rule' statement
      <empty list>
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    SmkImportedRulesNamesList
      SmkReferenceExpression: a
        PsiElement(Py:IDENTIFIER)('a')
      PsiErrorElement:Unexpected token in comma separated list of rules within 'use rule' statement
        <empty list>
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    SmkImportedRulesNamesList
      SmkReferenceExpression: b
        PsiElement(Py:IDENTIFIER)('b')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_FROM_KEYWORD)('from')
    PsiErrorElement:Expecting module name after 'from' keyword in 'use rule' statement
      <empty list>
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    SmkImportedRulesNamesList
      SmkReferenceExpression: f
        PsiElement(Py:IDENTIFIER)('f')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_FROM_KEYWORD)('from')
    PsiWhiteSpace(' ')
    SmkReferenceExpression: module
      PsiElement(Py:IDENTIFIER)('module')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_AS_KEYWORD)('as')
    PsiWhiteSpace(' ')
    SmkUseNewNamePattern
      PsiElement(Py:IDENTIFIER)('module_name2')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_WITH_KEYWORD)('with')
    PsiErrorElement:Expecting colon after 'with' keyword in 'use rule' statement
      <empty list>
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    SmkImportedRulesNamesList
      SmkReferenceExpression: NAME
        PsiElement(Py:IDENTIFIER)('NAME')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_AS_KEYWORD)('as')
    PsiWhiteSpace(' ')
    SmkUseNewNamePattern
      PsiElement(Py:IDENTIFIER)('name_2')
    PyStatementList
      PsiErrorElement:Expecting 'with:' at the end of 'use rule' declaration but before arguments sections
        <empty list>
      PsiWhiteSpace('\n    ')
      SmkUseArgsSection
        PsiElement(Py:IDENTIFIER)('input')
        PyArgumentList
          PsiElement(Py:COLON)(':')
          PsiWhiteSpace(' ')
          PyStringLiteralExpression: data_file.txt
            PsiElement(Py:SINGLE_QUOTED_STRING)('"data_file.txt"')
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiWhiteSpace(' ')
    SmkImportedRulesNamesList
      SmkReferenceExpression: NAME
        PsiElement(Py:IDENTIFIER)('NAME')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_AS_KEYWORD)('as')
    PsiErrorElement:':' can be placed only after 'with' keyword, which is missed
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(Py:COLON)(':')
    PyStatementList
      PsiWhiteSpace('\n    ')
      SmkUseArgsSection
        PsiElement(Py:IDENTIFIER)('input')
        PyArgumentList
          PsiElement(Py:COLON)(':')
          PsiWhiteSpace(' ')
          PyStringLiteralExpression: data_file.txt
            PsiElement(Py:SINGLE_QUOTED_STRING)('"data_file.txt"')
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiErrorElement:Expecting '*', rule name, or rule listing (comma separated) after 'use rule' statement
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_FROM_KEYWORD)('from')
    PsiWhiteSpace(' ')
    SmkReferenceExpression: M
      PsiElement(Py:IDENTIFIER)('M')
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_WITH_KEYWORD)('with')
    PsiElement(Py:COLON)(':')
    PyStatementList
      <empty list>
  PsiWhiteSpace('\n')
  SmkUse
    PsiElement(Py:USE_KEYWORD)('use')
    PsiWhiteSpace(' ')
    PsiElement(Py:RULE_KEYWORD)('rule')
    PsiErrorElement:Expecting '*', rule name, or rule listing (comma separated) after 'use rule' statement
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(Py:SMK_WITH_KEYWORD)('with')
    PsiElement(Py:COLON)(':')
    PyStatementList
      PsiWhiteSpace('\n    ')
      SmkUseArgsSection
        PsiElement(Py:IDENTIFIER)('output')
        PyArgumentList
          PsiElement(Py:COLON)(':')
          PsiWhiteSpace(' ')
          PyStringLiteralExpression: myfile3
            PsiElement(Py:SINGLE_QUOTED_STRING)('"myfile3"')